# initialise-cluster.yaml
---
- name: >-
    Initialise the control plane node
    (https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/#initializing-your-control-plane-node)
  become: true
  gather_facts: no
  hosts: controller_one
  tasks:
    - name: Run 'kubeadm init'
      ansible.builtin.command: kubeadm init
      register: kubeadm_init
      tags: [cp_only]
      changed_when: false

    - name: Run regexes and set 'kubeadm join' command as fact
      ansible.builtin.set_fact:
        kubeadm_join: "{{ kubeadm_init.stdout | regex_search(regexp,'\\1') | regex_replace(' \\\\+n +', ' ') }}"
      vars:
        regexp: "(?is)(kubeadm join .*)"

- name: Install a Pod network add-on
  become: true
  gather_facts: no
  hosts: controller_one
  tasks:
    - name: Get Calico manifest
      ansible.builtin.get_url:
        url: https://docs.projectcalico.org/manifests/calico.yaml
        dest: /tmp/calico.yaml

    - name: Install openshift Python package
      ansible.builtin.pip:
        name: openshift

    - name: Apply Calico manifest to the cluster
      kubernetes.core.k8s:
        src: /tmp/calico.yaml
        state: present
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf

    # vvv - TODO: candidate for removal; keep an eye on the GH issue - vvv

    - name: >-
        Patch to resolve iptables issue
        (https://github.com/projectcalico/calico/issues/4487)
        TODO: candidate for removal; keep an eye on the GH issue
      kubernetes.core.k8s:
        state: present
        resource_definition:
          apiVersion: crd.projectcalico.org/v1
          kind: FelixConfiguration
          metadata:
            name: default
            namespace: default
          spec:
            iptablesBackend: Legacy
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf

    # ^^^ - TODO: candidate for removal; keep an eye on the GH issue - ^^^

- name: Join worker nodes to cluster
  become: true
  gather_facts: no
  hosts: workers
  serial: 1
  tasks:
    - name: >-
        Create 'manifests' directory to cover log noise issue
        (https://github.com/kubernetes/kubeadm/issues/1345)
      ansible.builtin.file:
        path: /etc/kubernetes/manifests
        state: directory
        mode: 0755
        group: root
        owner: root

    - name: Run 'kubeadm join' on workers
      ansible.builtin.command: "{{ hostvars['controller_one']['kubeadm_join'][0] }}"
      changed_when: false

- name: Post-init setup on control plane, and retrieve kubeconfig to local
  become: true
  hosts: controller_one
  tags: [cp_only]
  tasks:
    - name: De-taint controller to allow scheduling
      ansible.builtin.command: >-
        kubectl taint nodes
        {{ pi_name }}
        node-role.kubernetes.io/master-
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
      changed_when: false

    - name: Install metrics server
      ansible.builtin.command: >-
        kubectl apply -f
        https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
      changed_when: false

    - name: Gather info on metrics server deployment, to extract arguments list
      kubernetes.core.k8s_info:
        api_version: apps/v1
        kind: Deployment
        name: metrics-server
        namespace: kube-system
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
      register: metrics_server_deployment

    - name: Set the metrics server deployment args list into a new fact, and append one more arg
      ansible.builtin.set_fact:
        updated_msd_args: "{{ arg_list | default([]) }} + [ '--kubelet-insecure-tls' ]"
      vars:
        arg_list: "{{ metrics_server_deployment.resources[0].spec.template.spec.containers[0].args }}"

    - name: Patch arguments on metrics server deployment spec template
      kubernetes.core.k8s:
        state: present
        api_version: apps/v1
        kind: Deployment
        name: metrics-server
        namespace: kube-system
        resource_definition:
          spec:
            template:
              spec:
                containers:
                  - name: "{{ metrics_server_deployment.resources[0].spec.template.spec.containers[0].name }}"
                    image: "{{ metrics_server_deployment.resources[0].spec.template.spec.containers[0].image }}"
                    args: "{{ updated_msd_args }}"
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf

    - name: Set temporary kubeconfig filename as fact
      ansible.builtin.set_fact:
        kubeconfig_filename: "/tmp/rpi-kubeconfig.{{ ansible_date_time.iso8601 }}.yaml"

    - name: Generate kubectl credential
      ansible.builtin.shell: >-
        kubeadm alpha kubeconfig user
        --client-name=jltykmbp --config=
        >>
        "{{ kubeconfig_filename }}"
      changed_when: false

    - name: Bind cluster admin role to my user
      ansible.builtin.command: >-
        kubectl create clusterrolebinding jltykmbp-cluster-admin-binding
        --clusterrole=cluster-admin --user=jltykmbp
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
      changed_when: false

    - name: Fetch kubeconfig from CP into local file
      ansible.builtin.fetch:
        src: "{{ kubeconfig_filename }}"
        dest: "{{ kubeconfig_filename }}"

    - name: Clean up temporary kubeconfig file
      ansible.builtin.file:
        path: "{{ kubeconfig_filename }}"
        state: absent

- name: Fold new kubeconfig into local
  # TODO: try slurping instead
  hosts: localhost
  tags: [cp_only]
  tasks:
    - name: Set local kubeconfig filename fact, based on copy from remote
      ansible.builtin.set_fact:
        kubeconfig_filename: "{{ path_components | join('/') }}"
      vars:
        path_components:
          - "{{ hostvars['controller_one']['kubeconfig_filename'] }}"
          - "controller_one"
          - "{{ hostvars['controller_one']['kubeconfig_filename'] }}"

    - name: Extract the data from the YAML file into a fact
      ansible.builtin.set_fact:
        original_kubeconfig: "{{ lookup('file', kubeconfig_filename) | from_yaml }}"

    - name: Clean up temporary kubeconfig file
      ansible.builtin.file:
        path: "{{ hostvars['controller_one']['kubeconfig_filename'] }}"
        state: absent

    - name: Update the fact
      ansible.utils.update_fact:
        updates:
          - path: original_kubeconfig.clusters[0].name
            value: rpi
          - path: original_kubeconfig.contexts[0].context.cluster
            value: rpi
          - path: original_kubeconfig.contexts[0].name
            value: jltykmbp@rpi
          - path: original_kubeconfig.current-context
            value: jltykmbp@rpi
      register: updated_kubeconfig

    - name: Set updated kubeconfig file path as a fact
      ansible.builtin.set_fact:
        updated_kubeconfig_file: "/tmp/kubeconfig.{{ ansible_date_time.iso8601 }}.yaml"

    - name: Write updated kubeconfig fact back to a YAML file
      ansible.builtin.copy:
        content: "{{ updated_kubeconfig.original_kubeconfig | to_nice_yaml }}"
        dest: "{{ updated_kubeconfig_file }}"
        mode: 0400

    - name: Set merged kubeconfig file path as a fact
      ansible.builtin.set_fact:
        merged_kubeconfig_file: "/tmp/kubeconfig.merged.{{ ansible_date_time.iso8601 }}.yaml"

    - name: >-
        Merge with my current kubeconfig
        (https://github.com/mikefarah/yq/issues/774#issuecomment-819929091)
      ansible.builtin.shell: >-
        yq eval-all '. as $item ireduce ({}; . *d $item )'
        "{{ ansible_env.HOME }}/.kube/config"
        "{{ updated_kubeconfig_file }}"
        >>
        "{{ merged_kubeconfig_file }}"
      changed_when: false

    - name: Clean up temporary merged kubeconfig file
      ansible.builtin.file:
        path: "{{ updated_kubeconfig_file }}"
        state: absent

    - name: Move current kubeconfig out of the way, to keep a backup
      ansible.builtin.command: >-
        mv
        {{ ansible_env.HOME }}/.kube/config
        {{ ansible_env.HOME }}/.kube/config.{{ ansible_date_time.iso8601 }}
      changed_when: false

    - name: Move updated/merged kubeconfig into place
      ansible.builtin.command: >-
        mv
        {{ merged_kubeconfig_file }}
        {{ ansible_env.HOME }}/.kube/config
      changed_when: false

    - name: Set mode on kubeconfig
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/.kube/config"
        mode: 0600
