# set-up-monitoring.yaml
---
- name: Prometheus node_exporter
  become: true
  hosts: all
  tasks:
    - name: Get checksum file from latest release
      ansible.builtin.uri:
        url: https://github.com/prometheus/node_exporter/releases/latest/download/sha256sums.txt
        return_content: true
      register: prom_node_exp_release

    - name: Run regex and get checksum and filename of arm64 archive in latest release
      ansible.builtin.set_fact:
        pner_checksum: "{{ prom_node_exp_release.content | regex_search(regexp,'\\1') | first }}"
        pner_filename: "{{ prom_node_exp_release.content | regex_search(regexp,'\\2') | first }}"
        pner_version: "{{ prom_node_exp_release.content | regex_search(regexp,'\\3') | first }}"
      vars:
        regexp: "(?is)([0-9a-f]{64})  (node_exporter-([0-9\\.]+)\\.linux-arm64.tar.gz)"

    - name: Make sure local temporary directories exist
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: 0755
      loop:
        - "/var/tmp/download/prometheus/node_exporter/v{{ pner_version }}"
        - "/var/tmp/unarchive/prometheus/node_exporter/v{{ pner_version }}"

    - name: Download file with check (sha256)
      ansible.builtin.get_url:
        url: "https://github.com/prometheus/node_exporter/releases/download/v{{ pner_version }}/{{ pner_filename }}"
        dest: "/var/tmp/download/prometheus/node_exporter/v{{ pner_version }}/{{ pner_filename }}"
        checksum: "sha256:{{ pner_checksum }}"

    - name: Unarchive a file that is already on the remote machine
      ansible.builtin.unarchive:
        src: "/var/tmp/download/prometheus/node_exporter/v{{ pner_version }}/{{ pner_filename }}"
        dest: "/var/tmp/unarchive/prometheus/node_exporter/v{{ pner_version }}"
        remote_src: yes
        include:
          - "node_exporter-{{ pner_version }}.linux-arm64/node_exporter"
        extra_opts:
          - --strip-components=1
        creates: "/var/tmp/unarchive/prometheus/node_exporter/v{{ pner_version }}/node_exporter"

    - name: Copy binary into place
      ansible.builtin.copy:
        src: "/var/tmp/unarchive/prometheus/node_exporter/v{{ pner_version }}/node_exporter"
        dest: /usr/local/bin/node_exporter
        remote_src: yes
        mode: 0755
        owner: "{{ ansible_env.SUDO_UID }}"
        group: "{{ ansible_env.SUDO_GID }}"

    - name: Define unit file for service
      ansible.builtin.template:
        src: node_exporter.service.j2
        dest: /etc/systemd/system/node_exporter.service
        mode: 0644

    - name: Enable and start service
      ansible.builtin.systemd:
        name: node_exporter
        enabled: yes
        state: started
        daemon_reload: yes
